<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chen.jason.dao.UserRoleAuthMapper">
  <resultMap id="BaseResultMap" type="com.chen.jason.model.UserRoleAuth">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="authority" jdbcType="VARCHAR" property="authority" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_role_auth
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chen.jason.model.UserRoleAuth">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_role_auth (`uid`, `role`, authority
      )
    values (#{uid,jdbcType=INTEGER}, #{role,jdbcType=VARCHAR}, #{authority,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.chen.jason.model.UserRoleAuth">
    update user_role_auth
    set `uid` = #{uid,jdbcType=INTEGER},
      `role` = #{role,jdbcType=VARCHAR},
      authority = #{authority,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, `uid`, `role`, authority
    from user_role_auth
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, `uid`, `role`, authority
    from user_role_auth
  </select>
</mapper>